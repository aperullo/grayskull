buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE'
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'com.palantir.docker' version '0.21.0'
    id 'com.palantir.docker-compose' version '0.21.0'
}

group = 'org.springframework.security.samples'
version = '1.0-SNAPSHOT'

allprojects {
    repositories {
        mavenLocal()
        maven { url "https://repo.spring.io/libs-snapshot" }
        maven { url "https://repo.spring.io/libs-milestone" }
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

project('resource-server') {

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.palantir.docker'

    dependencies {
        compile "org.springframework.boot:spring-boot-starter-webflux",
                "org.springframework.boot:spring-boot-starter-security",
                "org.springframework.security:spring-security-oauth2-resource-server",
                "org.springframework.security:spring-security-oauth2-jose"
    }

    docker {
        // we should change this name later
        name 'resource-server'
        dockerfile file('Dockerfile')
        files jar.outputs.files
        buildArgs([JAR_FILE: "${jar.outputs.files.singleFile.name}"])
    }

    publishing {
        publications {
            dockerPublication(MavenPublication) {
                from components.docker
                artifactId project.name + "-docker"
            }
        }
    }

    build.dependsOn('docker')
}

project('gateway') {

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.palantir.docker'

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Greenwich.RELEASE'
        }
    }

    dependencies {
        compile "org.springframework.boot:spring-boot-starter-webflux",
                "org.springframework.boot:spring-boot-starter-oauth2-client",
                "org.springframework.cloud:spring-cloud-starter-gateway",
                "org.springframework.cloud:spring-cloud-starter-security",
                // for sample controller in gateway
                "org.springframework.boot:spring-boot-starter-thymeleaf",
                "org.thymeleaf.extras:thymeleaf-extras-springsecurity5"
    }

    docker {
        // we should change this name later
        name 'spring-gateway'
        dockerfile file('Dockerfile')
        files jar.outputs.files
        buildArgs([JAR_FILE: "${jar.outputs.files.singleFile.name}"])
    }

    publishing {
        publications {
            dockerPublication(MavenPublication) {
                from components.docker
                artifactId project.name + "-docker"
            }
        }
    }

    build.dependsOn('docker')
}

project('deployment') {
    apply plugin: 'com.palantir.docker-compose'

    dependencies {
        implementation project(':resource-server')
        implementation project(':gateway')
    }

    dockerCompose {
        template 'src/templates/docker-compose.yml'
        dockerComposeFile 'build/docker-compose.yml'
    }

    build.dependsOn('generateDockerCompose')
}