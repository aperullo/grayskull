# Sections for sample app
apiVersion: v1
kind: ConfigMap
metadata:
  name: spring-config
data:
  application.properties: |
    spring.application.name=avocados-from-mexico
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: platform-usage
    labels:
      app: platform-usage
spec:
  selector:
    matchLabels:
      app: platform-usage
  template:
    metadata:
      labels:
        app: platform-usage
    spec:
      containers:
        - name: platform-usage
          image: rfding/platform-usage
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /config
              name: config
          ports:
            - name: http
              containerPort: 8080
      volumes:
        - name: config
          configMap:
            name: spring-config
---
apiVersion: v1
kind: Service
metadata:
  name: platform-usage-s
  labels:
    app: platform-usage
spec:
  selector:
    app: platform-usage
  ports:
    - name: http
      port: 8080


---
# Ingress for sample app
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: platform-usage-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/server-snippet: |
      proxy_ssl_verify off;
spec:
  tls:
    - hosts:
        - sample.gsp.test
      secretName: elk-gsp-tls
  rules:
    - host: sample.gsp.test
      http:
        paths:
          - path: /
            backend:
              serviceName: platform-usage-s
              servicePort: http


---
# Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: platform-usage
  labels:
    release: gsp-prometheus
spec:
  selector:
    matchLabels:
      app: platform-usage
  endpoints:
    - port: http
      interval: 5s
      path: '/actuator/prometheus'


--- 
# Redis
apiVersion: apps/v1
kind: Deployment
metadata:
    name: redis-dplymnt
    labels:
      app: redis
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis
          volumeMounts:
          - mountPath: /data
            name: redis-store
          ports:
          - containerPort: 6379
      volumes:
        - name: redis-store
          persistentVolumeClaim:
            claimName: redis-pvc    
---
apiVersion: v1
kind: Service
metadata:
  name: redis-srvc
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  labels:
    app: redis
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 30Mi