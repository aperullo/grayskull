apiVersion: v1
kind: ConfigMap
metadata:
  name: spring-config
data:
  application.properties: |
    spring.application.name=avocados-from-mexico
    spring.redis.host=${REDIS_SRVC_SERVICE_HOST}
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: sample-app-dplymnt
    labels:
      app: sample
spec:
  selector:
    matchLabels:
      app: sample
  template:
    metadata:
      labels:
        app: sample
    spec:
      containers:
        - name: sample-app
          image: spring-usage
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /config
              name: config
          ports:
          - containerPort: 8080
      volumes:
        - name: config
          configMap:
            name: spring-config
---
apiVersion: v1
kind: Service
metadata:
  name: sample-app-srvc
  labels:
    app: sample
spec:
  type: NodePort
  selector:
    app: sample
  ports:
    - protocol: TCP
      port: 8080
      nodePort: 30080

--- 
# Redis

apiVersion: apps/v1
kind: Deployment
metadata:
    name: redis-dplymnt
    labels:
      app: redis
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis
          volumeMounts:
          - mountPath: /data
            name: redis-store
          ports:
          - containerPort: 6379
          env:
          - name: REDIS_HOST
            value: "${REDIS_SRVC_SERVICE_HOST}"
      volumes:
        - name: redis-store
          persistentVolumeClaim:
            claimName: redis-pvc    
---
apiVersion: v1
kind: Service
metadata:
  name: redis-srvc
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  labels:
    app: redis
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 30Mi