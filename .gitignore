*.project
*.settings
*.classpath
*.metadata
*.iml
*.idea
*.checkstyle
*.DS_Store
.history
jsconfig.json
.vscode/
node_modules/
node/
atlassian-ide-plugin.xml
*.sonar-ide.properties
**/webapp/css/styles.css
platform/solr/**/overlays

.gradle
**/build/
**/out/

# Ignore Gradle GUI config
gradle-app.setting

# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)
!gradle-wrapper.jar

# Cache of project
.gradletasknamecache


# Helm Charts
# Chart dependencies
**/charts/*.tgz
*.tgz

# Ansible
**/*.retry

# Inventories to non-local clusters like staging.
**/staging.ini

# Secrets
**/secrets/*
!**/secrets/.gitkeep


# Terraform Ignore: https://raw.githubusercontent.com/github/gitignore/master/Terraform.gitignore
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

