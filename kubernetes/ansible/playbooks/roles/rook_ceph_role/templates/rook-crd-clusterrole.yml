# This manifest contains clusterroles that define the ability to see and manipulate the custom
# resources created by rook. The "aggregate-to" labels bind these permissions to the default
# "admin", "edit", and "view" clusterRoles. We do this so anyone with the "admin" role can see and 
# control rook crds inside there own namespace.

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rook-crd-view
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    rbac.authorization.kubernetes.io/autoupdate: "true"
rules:
- apiGroups: ["ceph.rook.io"]
  resources: ["cephblockpools", "cephclusters", "cephfilesystems", "cephnfses", "cephobjectstores", "cephobjectstoreusers"]
  verbs: ["get", "list", "watch"]

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rook-crd-edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.kubernetes.io/autoupdate: "true"
rules:
- apiGroups: ["ceph.rook.io"]
  resources: ["cephblockpools", "cephclusters", "cephfilesystems", "cephnfses", "cephobjectstores", "cephobjectstoreusers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
