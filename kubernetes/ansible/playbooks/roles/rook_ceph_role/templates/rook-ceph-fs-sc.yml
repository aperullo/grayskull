apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: csi-cephfs
{% if ceph_defaultStorage == "fs" %}
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
{% endif %}
# Change "rook-ceph" provisioner prefix to match the operator namespace if needed
provisioner: "{{ ceph_namespace }}.cephfs.csi.ceph.com"
parameters:
  # clusterID is the namespace where operator is deployed.
  clusterID: "{{ ceph_namespace }}"

  # CephFS filesystem name into which the volume shall be created
  fsName: grayskull-fs

  # Ceph pool into which the volume shall be created
  # Required for provisionVolume: "true"
  pool: grayskull-fs-data0

  # Root path of an existing CephFS volume
  # Required for provisionVolume: "false"
  # rootPath: /absolute/path

  # The secrets contain Ceph admin credentials. These are generated automatically by the operator
  # in the same namespace as the cluster.
  csi.storage.k8s.io/provisioner-secret-name: rook-ceph-csi
  csi.storage.k8s.io/provisioner-secret-namespace: "{{ ceph_namespace }}"
  csi.storage.k8s.io/node-stage-secret-name: rook-ceph-csi
  csi.storage.k8s.io/node-stage-secret-namespace: "{{ ceph_namespace }}"

  csi.storage.k8s.io/fstype: ext4

reclaimPolicy: Delete
mountOptions:
  # uncomment the following line for debugging
  #- debug

