---
- name: Rook Ceph | Templates list
  set_fact:
    rook_ceph_role_templates:
      - { name: namespace, file: rook-ceph-namespace.yml, type: ns }
      - { name: block-sc, file: rook-ceph-block-sc.yml, type: sc }
      - { name: dashboard-ingress, file: rook-ceph-dashboard-ingress.yml, type: ing }
      - { name: blockpool, file: rook-ceph-cephblockpool.yml, type: CephBlockPool }
      - { name: objectstore, file: rook-ceph-cephobjectstore.yml, type: CephObjectStore }
      - { name: cluster, file: rook-ceph-cluster.yml, type: CephCluster }
      - { name: object-user, file: rook-ceph-object-user.yml, type: CephObjectStoreUser }
      - { name: prometheus-servicemonitor, file: rook-ceph-prometheus-servicemonitor.yml, type: ServiceMonitor }
      - { name: prometheusrule, file: rook-ceph-prometheusrule.yml, type: PrometheusRule }

- name: Rook Ceph | Create manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ grayskull_dir }}/{{ item.file }}"
  with_items: "{{ rook_ceph_role_templates }}"
  register: rook_ceph_role_manifests
  when:
    - inventory_hostname == groups['kube-master'][0]

# Namespace must be deployed before secret.
- name: Rook Ceph | Apply namespace
  kube:
    name: namespace
    namespace: "{{ ceph_namespace }}"
    kubectl: "{{ bin_dir }}/kubectl"
    resource: ns
    filename: "{{ grayskull_dir }}/rook-ceph-namespace.yml"
    state: latest
  when:
    - inventory_hostname == groups['kube-master'][0]


#---- Create secret
- name: Rook Ceph | Check for secret
  shell: "{{ bin_dir }}/kubectl get secrets -n {{ ceph_namespace }}"
  register: rook_ceph_secret_exists
  changed_when: false

- name: Rook Ceph | Create secret
  shell: "{{ bin_dir }}/kubectl create secret generic {{ ingress_secretName }} --from-file {{ ingress_tls_cert }} --from-file {{ ingress_tls_key }} -n {{ ceph_namespace }}"
  when: "ingress_secretName not in rook_ceph_secret_exists.stdout"


#---- Deploy chart and templates
- name: Rook Ceph | Add repo
  shell: "{{ bin_dir }}/helm repo add rook-release https://charts.rook.io/release"

- name: Rook Ceph | Deploy chart
  helm_chart:
    name: "{{ helm_rook_ceph_name }}"
    namespace: "{{ ceph_namespace }}"
    bin_dir: "{{ bin_dir }}"
    chart_src: rook-release/rook-ceph
    chart_version: v1.1.0
    atomic: yes   # is atomic so that manifests aren't deployed before CRDs exist
    path_to_values: "{{ grayskull_dir }}/customizations/ceph.yml"


- name: Rook Ceph | Apply manifests
  kube:
    name: "{{ item.item.name }}"
    namespace: "{{ ceph_namespace }}"
    kubectl: "{{ bin_dir }}/kubectl"
    resource: "{{ item.item.type }}"
    filename: "{{ grayskull_dir }}/{{ item.item.file }}"
    state: "latest"
  with_items: "{{ rook_ceph_role_manifests.results }}"
  when:
    - inventory_hostname == groups['kube-master'][0]
