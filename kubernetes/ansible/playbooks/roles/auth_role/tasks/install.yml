- name: Authorization | Create subfolder
  file:
    path: "{{ role_dir }}"
    state: directory
    mode: '0755'


#---- Create OIDC secret
- name: Setup | Stat for UUID file
  stat:
    path: "{{ role_dir }}/uuid"
  register: stat_result

- name: Setup | Check for UUID file or create
  when: stat_result is defined and not stat_result.stat.exists
  block: 
  - name: Setup | Generate UUID
    set_fact: 
      client_UUID: "{{ 99999999 | random | to_uuid }}"
      cacheable: no

  - name: Setup | Write UUID to file
    copy: 
      content: "{{ client_UUID }}"
      dest: "{{ role_dir }}/uuid"

- name: Setup | Get UUID file contents 
  when: stat_result is defined and stat_result.stat.exists
  block:
  - name: Setup | Slurp file
    slurp: 
      src: "{{ role_dir }}/uuid"
    register: slurp_contents

  - name: Setup | Reuse UUID
    set_fact:
      client_UUID: "{{ slurp_contents.content | b64decode }}"


#---- Template Manifests
- name: Authorization | Template values file
  template:
    src: "auth-values.yml"
    dest: "{{ role_dir }}/auth-values.yml"

- name: Authorization | Templates list
  set_fact:
    auth_role_templates:
      - { file: auth-namespace.yml }
      - { file: auth-configmap.yml }
      - { file: auth-certificate.yml }

- name: Authorization | Create manifests
  template:
    src: "{{ item.file }}"
    dest: "{{ role_dir }}/{{ item.file }}"
  with_items: "{{ auth_role_templates }}"
  register: auth_role_manifests

- name: Authorization | Apply manifests
  kube:
    namespace: "{{ auth_namespace }}"
    kubectl: "{{ bin_dir }}/kubectl"
    filename: "{{ role_dir }}/{{ item.item.file }}"
    state: latest
  with_items: "{{ auth_role_manifests.results }}"

- name: Authorization | Create secrets directory
  file:
    path: "{{ auth_secrets_dir }}"
    state: directory
    mode: 0755

# TODO: Instead of password file, should use ansible vault
- name: Authorization | Move passwd file
  copy: 
    src: "files/secrets/password"
    dest: "{{ auth_passwd_file }}"
    mode: 0755

- name: Authorization | Deploy chart
  helm_chart:
    name: "{{ helm_auth_chart_name }}"
    namespace: "{{ auth_namespace }}"
    bin_dir: "{{ bin_dir }}"
    chart_src: "{{ grayskull_dir }}/{{ helm_auth_image_name }}"
    chart_version: "{{ helm_auth_chart_version }}"
    path_to_values: "{{ role_dir }}/auth-values.yml"
