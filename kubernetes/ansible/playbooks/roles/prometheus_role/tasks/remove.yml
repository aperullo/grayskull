#---- Remove secret
- name: Prometheus | Check for secret
  shell: "{{ bin_dir }}/kubectl get secrets -n {{ prometheus_namespace }}"
  register: prometheus_secret_exists
  changed_when: false

- name: Prometheus | Remove secret
  shell: "{{ bin_dir }}/kubectl delete secret {{ ingress_secretName }} -n {{ prometheus_namespace }}"
  when: "ingress_secretName in prometheus_secret_exists.stdout"

- name: Prometheus | Remove chart
  helm_chart:
    name: "{{ helm_prometheus_name }}"
    namespace: "{{ prometheus_namespace }}"
    bin_dir: "{{ bin_dir }}"
    chart_src: stable/prometheus-operator
    chart_version: 5.12.3
    state: absent
    path_to_values: "{{ grayskull_dir }}/customizations/prometheus.yml"


#---- Remove CRDs
# Prometheus operator leaves these CRDs lying around after uninstalling. 

- name: Prometheus | Remove CRD
  shell: "{{ bin_dir }}/kubectl delete crd prometheuses.monitoring.coreos.com -n {{ prometheus_namespace }}"
  ignore_errors: yes

- name: Prometheus | Remove CRD
  shell: "{{ bin_dir }}/kubectl delete crd prometheusrules.monitoring.coreos.com -n {{ prometheus_namespace }}"
  ignore_errors: yes

- name: Prometheus | Remove CRD
  shell: "{{ bin_dir }}/kubectl delete crd servicemonitors.monitoring.coreos.com -n {{ prometheus_namespace }}"
  ignore_errors: yes

- name: Prometheus | Remove CRD
  shell: "{{ bin_dir }}/kubectl delete crd podmonitors.monitoring.coreos.com -n {{ prometheus_namespace }}"
  ignore_errors: yes

- name: Prometheus | Remove CRD
  shell: "{{ bin_dir }}/kubectl delete crd alertmanagers.monitoring.coreos.com -n {{ prometheus_namespace }}"
  ignore_errors: yes

#---- Delete manifests

# At the moment we put prometheus into kube-system. Therefore until we put it in another namespace
# it should stay commented out. We DO NOT want to delete kube-system.

- name: Prometheus | Templates list
  set_fact:
    prometheus_role_templates:
      # - { name: namespace, file: prometheus-namespace.yml, type: ns }
      - { name: cluster-role, file: prometheus-crd-clusterrole.yml, type: ClusterRole }

- name: Prometheus | Create manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ grayskull_dir }}/{{ item.file }}"
  with_items: "{{ prometheus_role_templates }}"
  register: prometheus_role_manifests
  when:
    - inventory_hostname == groups['kube-master'][0]

# Namespace must be deployed before secret.
- name: Prometheus | Remove manifest products
  kube:
    name: "{{ item.item.name }}"
    namespace: "{{ prometheus_namespace }}"
    kubectl: "{{ bin_dir }}/kubectl"
    resource: "{{ item.item.type }}"
    filename: "{{ grayskull_dir }}/{{ item.item.file }}"
    state: "absent"
  with_items: "{{ prometheus_role_manifests.results }}"
  when:
    - inventory_hostname == groups['kube-master'][0]