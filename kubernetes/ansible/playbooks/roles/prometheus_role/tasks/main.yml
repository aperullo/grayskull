---
- name: Prometheus | Templates list
  set_fact:
    prometheus_role_templates:
      - { name: namespace, file: prometheus-namespace.yml, type: ns }

- name: Prometheus | Create manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ grayskull_dir }}/{{ item.file }}"
  with_items: "{{ prometheus_role_templates }}"
  register: prometheus_role_manifests
  when:
    - inventory_hostname == groups['kube-master'][0]

# Namespace must be deployed before secret.
- name: Prometheus | Apply manifests
  kube:
    name: "{{ item.item.name }}"
    namespace: "{{ prometheus_namespace }}"
    kubectl: "{{ bin_dir }}/kubectl"
    resource: "{{ item.item.type }}"
    filename: "{{ grayskull_dir }}/{{ item.item.file }}"
    state: "latest"
  with_items: "{{ prometheus_role_manifests.results }}"
  when:
    - inventory_hostname == groups['kube-master'][0]


#---- Create secret
- name: Prometheus | Check for secret
  shell: "{{ bin_dir }}/kubectl get secrets -n {{ prometheus_namespace }}"
  register: prometheus_secret_exists
  changed_when: false

- name: Prometheus | Create secret
  shell: "{{ bin_dir }}/kubectl create secret generic {{ ingress_secretName }} --from-file {{ ingress_tls_cert }} --from-file {{ ingress_tls_key }} -n {{ prometheus_namespace }}"
  when: "ingress_secretName not in prometheus_secret_exists.stdout"

- name: Prometheus | Deploy chart operator
  helm_chart:
    name: gsp-prometheus
    namespace: "{{ prometheus_namespace }}"
    bin_dir: "{{ bin_dir }}"
    chart_src: stable/prometheus-operator
    chart_version: 5.12.3
    upgrade: no
    atomic: no
    path_to_values: "{{ grayskull_dir }}/customizations/prometheus.yml"

