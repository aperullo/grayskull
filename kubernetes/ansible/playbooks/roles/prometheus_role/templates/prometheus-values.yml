prometheus:
  ingress:
    enabled: true
    paths: [/]
    hosts:
      - "prom.{{ grayskull_domain }}"
    tls:
      - hosts:
          - "prom.{{ grayskull_domain }}"
        secretName: prom-gsp-tls

grafana:
  ingress:
    enabled: true
    paths: [/]
    hosts:
      - "graph.{{ grayskull_domain }}"
    tls:
      - hosts:
          - "graph.{{ grayskull_domain }}"
        secretName: prom-gsp-tls
# {% raw %}
  extraContainers: |
    - name: grafana-datasource-updater
      image: alpine
      env:
        {{- if not .Values.env.GF_SECURITY_ADMIN_USER }}
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.admin.existingSecret | default (include "grafana.fullname" .) }}
              key: {{ .Values.admin.userKey | default "admin-user" }}
        {{- end }}
        {{- if and (not .Values.env.GF_SECURITY_ADMIN_PASSWORD) (not .Values.env.GF_SECURITY_ADMIN_PASSWORD__FILE) }}
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.admin.existingSecret | default (include "grafana.fullname" .) }}
              key: {{ .Values.admin.passwordKey | default "admin-password" }}
        {{- end }}
      command: ["sh", "-c", "while true; do curl -X POST -u $GF_SECURITY_ADMIN_USER:$GF_SECURITY_ADMIN_PASSWORD -H 'Accept: application/json' -H 'Content-Type: application/json' localhost:3000/api/admin/provisioning/datasources/reload; sleep 30; done"]
# {% endraw %}

alertmanager:
  ingress:
    enabled: true
    paths: [/]
    hosts:
      - "alert.{{ grayskull_domain }}"
    tls:
      - hosts:
          - "alert.{{ grayskull_domain }}"
        secretName: prom-gsp-tls

kubeApiServer:
  enabled: true