- name: ELK | Create subfolder
  file:
    path: "{{ grayskull_dir }}/{{ subfolder }}"
    state: directory
    mode: '0755'

- name: ELK | Roles list
  set_fact:
    elk_values_templates:
      - { file: elasticsearch-values.yml }
      - { file: fluentd-values.yml }
      - { file: kibana-values.yml }
      - { file: logstash-values.yml }

- name: ELK | Create manifests
  template:
    src: "{{ item.file }}"
    dest: "{{ grayskull_dir }}/{{ subfolder }}/{{ item.file }}"
  with_items: "{{ elk_values_templates }}"
  register: elk_role_manifests

- name: ELK | Templates list
  set_fact:
    elk_role_templates:
      - { name: namespace, file: elk-namespace.yml, type: ns }

- name: ELK | Create manifests
  template:
    src: "{{ item.file }}"
    dest: "{{ grayskull_dir }}/{{ subfolder }}/{{ item.file }}"
  with_items: "{{ elk_role_templates }}"
  register: elk_role_manifests

# Namespace must be deployed before secret.
- name: ELK | Apply manifests
  kube:
    name: "{{ item.item.name }}"
    namespace: "{{ elk_namespace }}"
    kubectl: "{{ bin_dir }}/kubectl"
    resource: "{{ item.item.type }}"
    filename: "{{ grayskull_dir }}/{{ subfolder }}/{{ item.item.file }}"
    state: "latest"
  with_items: "{{ elk_role_manifests.results }}"
  when:
    - inventory_hostname == groups['kube-master'][0]


#---- Create secret
- name: ELK | Check for secret
  shell: "{{ bin_dir }}/kubectl get secrets -n {{ elk_namespace }}"
  register: elk_secret_exists
  changed_when: false

- name: ELK | Create secret
  shell: "{{ bin_dir }}/kubectl create secret generic {{ ingress_secretName }} --from-file {{ ingress_tls_cert }} --from-file {{ ingress_tls_key }} -n {{ elk_namespace }}"
  when: "ingress_secretName not in elk_secret_exists.stdout"

- name: ELK | Deploy Elasticsearch chart
  helm_chart:
    name: "{{ helm_elasticsearch_chart_name }}"
    namespace: "{{ elk_namespace }}"
    bin_dir: "{{ bin_dir }}"
    chart_src: "{{ grayskull_dir }}/{{ helm_elasticsearch_image_name }}"
    chart_version: "{{ helm_elasticsearch_chart_version }}"
    path_to_values: "{{ grayskull_dir }}/{{ subfolder }}/elasticsearch-values.yml"

- name: ELK | Deploy Kibana chart
  helm_chart:
    name: "{{ helm_kibana_chart_name }}"
    namespace: "{{ elk_namespace }}"
    bin_dir: "{{ bin_dir }}"
    chart_src: "{{ grayskull_dir }}/{{ helm_kibana_image_name }}"
    chart_version: "{{ helm_kibana_chart_version }}"
    path_to_values: "{{ grayskull_dir }}/{{ subfolder }}/kibana-values.yml"

- name: ELK | Deploy Logstash chart
  helm_chart:
    name: "{{ helm_logstash_chart_name }}"
    namespace: "{{ elk_namespace }}"
    bin_dir: "{{ bin_dir }}"
    chart_src: "{{ grayskull_dir }}/{{ helm_logstash_image_name }}"
    chart_version: "{{ helm_logstash_chart_version }}"
    path_to_values: "{{ grayskull_dir }}/{{ subfolder }}/logstash-values.yml"

- name: ELK | Deploy Fluentd chart
  helm_chart:
    name: "{{ helm_fluentd_chart_name }}"
    namespace: "{{ elk_namespace }}"
    bin_dir: "{{ bin_dir }}"
    chart_src: "{{ grayskull_dir }}/{{ helm_fluentd_image_name }}"
    chart_version: "{{ helm_fluentd_chart_version }}"
    path_to_values: "{{ grayskull_dir }}/{{ subfolder }}/fluentd-values.yml"
